@model WebApplication1.Models.Parcel

@{
    ViewData["Title"] = "Create Payment Transaction";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string parcelDeliveryCharge = ViewData["ParcelDeliveryCharge"] as string;
    string roundedDeliveryCharge = ViewData["roundedDeliveryCharge"] as string;
    string parcelDeliveryDate = ViewData["parcelDeliveryDate"] as string;
}
<style>
.payment-form {
    padding-bottom: 50px;
    font-family: 'Montserrat', sans-serif;
}

.payment-form.dark {
    background-color: #f6f6f6;
}

.payment-form .content {
    box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.075);
    background-color: white;
}

.payment-form .block-heading {
    padding-top: 50px;
    margin-bottom: 40px;
    text-align: center;
}

.payment-form .block-heading p {
    text-align: center;
    max-width: 420px;
    margin: auto;
    opacity: 0.7;
}

.payment-form.dark .block-heading p {
    opacity: 0.8;
}

.payment-form .block-heading h1,
.payment-form .block-heading h2,
.payment-form .block-heading h3 {
    margin-bottom: 1.2rem;
    color: black;
}

.payment-form .form {
    border-top: 2px solid #5ea4f3;
    box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.075);
    background-color: #ffffff;
    padding: 0;
    max-width: 600px;
    margin: auto;
}

.payment-form .title {
    font-size: 1em;
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
    margin-bottom: 0.8em;
    font-weight: 600;
    padding-bottom: 8px;
}

.payment-form .products {
    background-color: #f7fbff;
    padding: 25px;
}

.payment-form .products .item {
    margin-bottom: 1em;
}

.payment-form .products .item-name {
    font-weight: 600;
    font-size: 0.9em;
}

.payment-form .products .item-description {
    font-size: 0.8em;
    opacity: 0.6;
}

.payment-form .products .item p {
    margin-bottom: 0.2em;
}

.payment-form .products .price {
    float: right;
    font-weight: 600;
    font-size: 0.9em;
}

.payment-form .products .total {
    border-top: 1px solid rgba(0, 0, 0, 0.1);
    margin-top: 10px;
    padding-top: 19px;
    font-weight: 600;
    line-height: 1;
}

.payment-form .card-details {
    padding: 25px 25px 15px;
}

.payment-form .card-details label {
    font-size: 12px;
    font-weight: 600;
    margin-bottom: 15px;
    color: #79818a;
    text-transform: uppercase;
}

.payment-form .card-details button {
    margin-top: 0.6em;
    padding: 12px 0;
    font-weight: 600;
    display: block; /* To center the button */
    width: 100%; /* To center the button */
    font-size: 18px;
    color: #fff;
    background-color: #007bff; /* Blue color */
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.2s;
}

.payment-form .card-details button:hover {
    background-color: #0056b3; /* Darker blue on hover */
}

.payment-form .date-separator {
    margin-left: 10px;
    margin-right: 10px;
    margin-top: 5px;
}

.payment-form .products {
    padding: 40px;
}

.payment-form .products .item-name {
    font-size: 1em;
}

.payment-form .products .price {
    font-size: 1em;
}

.payment-form .card-details {
    padding: 40px 40px 30px;
}

.payment-form .card-details button {
    margin-top: 2em;
}
</style>

<link rel="stylesheet" href="~/css/backnavbar.css" />
<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />

<header class="header">
    @await Html.PartialAsync("~/Views/Home/_FOSMenu.cshtml")
</header>

<br>
<br>
<br>
<br>
<br>

<div class="breadcrumbs">
    &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp;<a href="~/Home/Dashboard">Home</a> >
    <a href="~/ParcelReceiving/CreateParcel">Orders</a> >
    <a href="~/ParcelReceiving/ComputeTargetDeliveryDate">Rates </a> >
    <a href="~/ParcelReceiving/CreatePaymentTransaction">Payment </a>
</div>


<div class="container">
    <main class="page payment-page">
    <section class="payment-form dark">
      <div class="container">
        <div class="block-heading">
          <h2>Payment</h2>
        </div>
        <div class="form">
          <div class="products">
            <h3 class="title">Checkout</h3>
            <div class="item">
                            <span class="price">@parcelDeliveryDate</span>
                            <p class="item-name">Delivery Date</p>
              <p class="item-description"></p>
            </div>
            <div class="item">
                            <span class="price">@roundedDeliveryCharge</span>
                            <p class="item-name">Delivery Charge (Rounded)</p>
              <p class="item-description"></p>
            </div>
                        <div class="total">Total<span class="price">@parcelDeliveryCharge</span></div>
          </div>
    <div class="card-details">
        <h3 class="title">Total Amount</h3>
        <div class="row">
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
            }

            <form method="post" asp-action="CreatePaymentTransaction" class="needs-validation" novalidate>
                <div class="form-group">
                    <label for="cashAmount">Cash Amount:</label>
                    <input type="number" step="0.01" class="form-control" id="cashAmount" name="cashAmount" placeholder="Enter cash amount" required>
                </div>

                <div class="form-group">
                    <label for="voucherAmount">Voucher Amount:</label>
                    <input type="number" step="0.01" class="form-control" id="voucherAmount" name="voucherAmount" placeholder="Enter voucher amount" required>
                </div>

                <button type="submit" class="btn btn-primary">Create Payment Transaction</button>

            </form>
        </div>
    </div>
                </div>
            </div>
        </section>
    </main>
</div>





@section Scripts {
    <script>
        // Disable form validation styling
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                var forms = document.getElementsByClassName('needs-validation');
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>
}
